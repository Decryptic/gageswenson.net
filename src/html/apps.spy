<!DOCTYPE html>
<html>
    <head>
        << partials/head >>
    </head>

    <body>
        <header>
            << partials/header >>
        </header>
        <div class="wrapper">
            <div class="container">
                <div class="left">
                    <p>Last week, I took the time to write an Android app with Google's <a href="https://flutter.dev/">Flutter framework</a>. Flutter is really cool because with one codebase, you can build a native app for Android, iOS, web, and Desktop. It's different from <a href="https://reactnative.dev/">React Native</a> because it uses the <a href="https://dart.dev/">Dart</a> programming language. Rather than your UI components being markup, they are instead instances of objects. They also have the Cupertino widget catalog, so you can write iPhone-looking apps and run them on an Android. Flutter is really sleek, and I wanted to get immersed, so I wrote an app called <a href="/apps/date_countdown">Date Countdown</a>. You can find it on the <a href="https://play.google.com/store/apps/details?id=net.gageswenson.date_countdown">Google Play store</a>, or you can <a href="/date_countdown.apk">download the .apk</a> onto your Android phone.</p>
                    <p>My <a href="/apps/mandelbrot">Mandelbrot Set visualizer</a> is fairly minimal. I wrote it in vanilla JavaScript. Click on the fractal to zoom in. The app doesn't highlight divergence, or in layman's terms, it doesn't have all the trippy visuals. Only points that lie within the set are depicted in black. To learn more, check out the <a href="https://en.wikipedia.org/wiki/Mandelbrot_set">Wikipedia article</a> on the Mandelbrot set. I was able to take that article and, with my JavaScript know-how, create <a href="https://github.com/Decryptic/MandelbrotSet/">this GitHub repository</a>. Be sure to check it out. I would love to hear your feedback, questions, comments, critiques, or criticisms.</p>
                    <!--<p><a href="/pong">Pong</a> is exactly what it sounds like. Virtual ping pong. It's player versus player; there's no computer opponent. The red player moves with the A and D keys, the blue player moves with the left and right arrow keys. It's not very exciting, but hey, I wrote it from scratch just for fun, so it belongs here.</p>-->
                    <p><a href="/apps/brick_breaker">Brick Breaker</a> is that popular game where you paddle the ball around a cell and break bricks. It's pretty straightforward, although it is incomplete. I wrote this to get more familiar with <a href="https://en.wikipedia.org/wiki/Node.js">node code</a> back in 2019 and never got around to finishing it. It only loads level_0, there's no menu and no penalty if the ball misses your paddle and bounces off the bottom. Collision detection needs work. I dug this up looking for things I could add to this list of apps, and since it runs, it made the cut.</p>
                </div>
                <div class="right">
                    <ul>
                        <li><a href="/apps/date_countdown">Date Countdown</a></li>
                        <li><a href="/apps/mandelbrot">Mandelbrot Set</a></li>
                        <li><a href="/apps/brick_breaker">Brick Breaker</li>
                    </ul>
                </div>
            </div>
        </div>
        << partials/scripts >>
    </body>
</html>
